name: Deploy Resurse

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  terraform_validate:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_CLOUD_TOKEN }}
    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_CLOUD_TOKEN }}
    outputs:
      instance_ip: ${{ steps.ip_output.outputs.instance_ip }}
      admin_username: ${{ steps.username_output.outputs.admin_username }}
    defaults:
      run:
        working-directory: terraform
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Get Instance IP from Terraform output
      if: always()
      id: ip_output
      run: echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_OUTPUT

    - name: Get Admin Username from Terraform output
      if: always()
      id: username_output
      run: echo "admin_username=$(terraform output -raw admin_username)" >> $GITHUB_OUTPUT
